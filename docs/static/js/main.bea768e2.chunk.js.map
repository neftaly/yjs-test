{"version":3,"sources":["App.jsx","index.jsx"],"names":["connectDoc","doc","room","rtcProvider","WebrtcProvider","peerOpts","config","iceServers","urls","wsProvider","WebsocketProvider","idbProvider","IndexeddbPersistence","destroy","Doc","yDoc","useYDoc","useYArray","getArray","data","push","onClick","length","map","username","index","App","useState","mounted","setMounted","children","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAOMA,EAAa,SAAAC,GACjB,IAAMC,EAAO,YACPC,EAAc,IAAIC,IACtBF,EAAMD,EAAK,CACTI,SAAU,CACRC,OAAQ,CACNC,WAAY,CACV,CAAEC,KAAM,qCAMZC,EAAa,IAAIC,IACrB,sBAAuBR,EAAMD,EAAK,IAE9BU,EAAc,IAAIC,IAAqBV,EAAMD,GACnD,OAAO,WACLE,EAAYU,UACZJ,EAAWI,UACXF,EAAYE,YAIVC,EAAM,WACV,IAAMC,EAAOC,YAAQ,YAAahB,GADlB,EAEOiB,YAAUF,EAAKG,SAAS,cAAvCC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,KACd,OACE,gCACE,wBAAQC,QAAS,kBAAMD,EAAK,CAAC,aAAD,OAAcD,EAAKG,WAA/C,0BAGA,6BACGH,EAAKI,KAAI,SAACC,EAAUC,GAAX,OACR,6BAAiBD,GAARC,YAqBJC,EAdH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,KAEhB,OACE,qCACE,wBAAQC,SACNF,EAAU,UAAY,QACtBP,QACA,SAAAU,GAAK,OAAIF,GAAYD,MAEtBA,GAAW,cAAC,EAAD,QCrDlBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bea768e2.chunk.js","sourcesContent":["import { useState } from 'react'\nimport * as Y from 'yjs'\nimport { useYDoc, useYArray } from 'zustand-yjs'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { WebsocketProvider } from 'y-websocket'\nimport { IndexeddbPersistence } from 'y-indexeddb'\n\nconst connectDoc = doc => {\n  const room = 'testyroom'\n  const rtcProvider = new WebrtcProvider(\n    room, doc, {\n      peerOpts: {\n        config: {\n          iceServers: [\n            { urls: 'stun:stun.l.google.com:19302' }\n          ]\n        }\n      }\n    }\n  )\n  const wsProvider = new WebsocketProvider(\n    'ws://localhost:1234', room, doc, {}\n  )\n  const idbProvider = new IndexeddbPersistence(room, doc)\n  return () => {\n    rtcProvider.destroy()\n    wsProvider.destroy()\n    idbProvider.destroy()\n  }\n}\n\nconst Doc = () => {\n  const yDoc = useYDoc('myDocGuid', connectDoc)\n  const { data, push } = useYArray(yDoc.getArray('usernames'))\n  return (\n    <div>\n      <button onClick={() => push([`username #${data.length}`])}>\n        New Username\n      </button>\n      <ul>\n        {data.map((username, index) => (\n          <li key={index}>{username}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [mounted, setMounted] = useState(true)\n  return (\n    <>\n      <button children={\n        mounted ? 'unmount' : 'mount'\n      } onClick={\n        event => setMounted(!mounted)\n      } />\n      {mounted && <Doc />}\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}