{"version":3,"sources":["App.jsx","index.jsx"],"names":["connectDoc","doc","provider","WebrtcProvider","peerOpts","config","iceServers","urls","console","log","disconnect","Doc","yDoc","useYDoc","useYArray","getArray","data","push","onClick","length","map","username","index","App","useState","mounted","setMounted","children","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAKMA,EAAa,SAAAC,GACjB,IAAMC,EAAW,IAAIC,IAAe,YAAaF,EAAK,CACpDG,SAAU,CACRC,OAAQ,CACNC,WAAY,CACV,CAAEC,KAAM,gCACR,CAAEA,KAAM,+BACR,CAAEA,KAAM,kCAKhB,OAAO,WACLC,QAAQC,IAAI,gBACZP,EAASQ,eAIPC,EAAM,WACV,IAAMC,EAAOC,YAAQ,YAAab,GADlB,EAEOc,YAAUF,EAAKG,SAAS,cAAvCC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,KACd,OACE,gCACE,wBAAQC,QAAS,kBAAMD,EAAK,CAAC,aAAD,OAAcD,EAAKG,WAA/C,0BAGA,6BACGH,EAAKI,KAAI,SAACC,EAAUC,GAAX,OACR,6BAAiBD,GAARC,YAqBJC,EAdH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,KAEhB,OACE,qCACE,wBAAQC,SACNF,EAAU,UAAY,QACtBP,QACA,SAAAU,GAAK,OAAIF,GAAYD,MAEtBA,GAAW,cAAC,EAAD,QC7ClBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1737091.chunk.js","sourcesContent":["import { useState } from 'react'\nimport * as Y from 'yjs'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { useYDoc, useYArray } from 'zustand-yjs'\n\nconst connectDoc = doc => {\n  const provider = new WebrtcProvider('testyroom', doc, {\n    peerOpts: {\n      config: {\n        iceServers: [\n          { urls: 'stun:stun.l.google.com:19302' },\n          { urls: 'stun:stun.nextcloud.com:443' },\n          { urls: 'stun:relay.webwormhole.io' }\n        ]\n      }\n    }\n  })\n  return () => {\n    console.log('disconnected') \n    provider.disconnect()\n  }\n}\n\nconst Doc = () => {\n  const yDoc = useYDoc('myDocGuid', connectDoc)\n  const { data, push } = useYArray(yDoc.getArray('usernames'))\n  return (\n    <div>\n      <button onClick={() => push([`username #${data.length}`])}>\n        New Username\n      </button>\n      <ul>\n        {data.map((username, index) => (\n          <li key={index}>{username}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [mounted, setMounted] = useState(true)\n  return (\n    <>\n      <button children={\n        mounted ? 'unmount' : 'mount'\n      } onClick={\n        event => setMounted(!mounted)\n      } />\n      {mounted && <Doc />}\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}